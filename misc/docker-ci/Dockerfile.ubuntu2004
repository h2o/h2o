FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get --yes update
RUN apt-get install --yes \
	apache2-utils \
	bison \
	clang \
	cmake \
	cmake-data \
	curl \
	flex \
	git \
	libbrotli-dev \
	libc-ares-dev \
	libclang-dev \
	libedit-dev \
	libelf-dev \
	libev-dev \
	libssl-dev \
	libuv1-dev \
	llvm-dev \
	libllvm7 \
	llvm-7-dev \
	libclang-7-dev \
	zlib1g-dev \
	memcached \
	netcat-openbsd \
	nghttp2-client \
	php-cgi \
	pkgconf \
	python3 \
	python3-distutils \
	redis-server \
	ruby-dev \
	sudo \
	systemtap-sdt-dev \
	wget

# install curl 7.57.0 because t/50fastcgi.t depends on it.
RUN apt-get install --yes libnghttp2-dev \
	&& wget --no-verbose -O - https://curl.haxx.se/download/curl-7.57.0.tar.gz | tar xzf - \
	&& (cd curl-7.57.0 && ./configure --prefix=/usr/local --without-brotli --with-nghttp2 --disable-shared && make && sudo make install)

# perl
RUN apt-get install --yes \
	cpanminus \
	libfcgi-perl \
	libfcgi-procmanager-perl \
	libipc-signal-perl \
	libjson-perl \
	liblist-moreutils-perl \
	libplack-perl \
	libscope-guard-perl \
	libtest-exception-perl \
	libwww-perl \
	libio-socket-ssl-perl
ENV PERL_CPANM_OPT="--mirror https://cpan.metacpan.org/"
RUN sudo cpanm --notest Starlet Protocol::HTTP2
RUN sudo cpanm --notest https://github.com/tokuhirom/Test-TCP.git@2.21

# h2spec
RUN curl -Ls https://github.com/i110/h2spec/releases/download/v2.2.0-4e8cc7e/h2spec_linux_amd64.tar.gz | tar zx -C /usr/local/bin

# bcc and bpftrace
RUN git clone https://github.com/iovisor/bcc.git && \
	cd bcc && \
	git checkout 6021958a && \
	mkdir build && \
	cd build && \
	cmake -DCMAKE_INSTALL_PREFIX=/usr -DPYTHON_CMD=python3 .. && \
	make && \
	make install && \
	make clean
RUN git clone https://github.com/kazuho/bpftrace.git && \
	cd bpftrace && \
	git checkout kazuho/usdt-attach-all-locations && \
	mkdir build &&  \
	cd build && \
	cmake .. && \
	make && \
	make install && \
	make clean

# use dumb-init
RUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.1/dumb-init_1.2.1_amd64 \
 && chmod +x /usr/local/bin/dumb-init

# create user
RUN useradd --create-home ci
RUN echo 'ci ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
WORKDIR /home/ci
USER ci

ENTRYPOINT ["/usr/local/bin/dumb-init"]
