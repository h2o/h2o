.Dd $Mdocdate: July 17 2014 $
.Dt ASN1_STRING_LENGTH 3
.Os
.Sh NAME
.Nm ASN1_STRING_cmp ,
.Nm ASN1_STRING_data ,
.Nm ASN1_STRING_dup ,
.Nm ASN1_STRING_length ,
.Nm ASN1_STRING_length_set ,
.Nm ASN1_STRING_set ,
.Nm ASN1_STRING_to_UTF8 ,
.Nm ASN1_STRING_type
.Nd ASN1_STRING utility functions
.Sh SYNOPSIS
.In openssl/asn1.h
.Ft int
.Fo ASN1_STRING_cmp
.Fa "ASN1_STRING *a"
.Fa "ASN1_STRING *b"
.Fc
.Ft unsigned char *
.Fo ASN1_STRING_data
.Fa "ASN1_STRING *x"
.Fc
.Ft ASN1_STRING *
.Fo ASN1_STRING_dup
.Fa "ASN1_STRING *a"
.Fc
.Ft int
.Fo ASN1_STRING_length
.Fa "ASN1_STRING *x"
.Fc
.Ft void
.Fo ASN1_STRING_length_set
.Fa "ASN1_STRING *x"
.Fa "int len"
.Fc
.Ft int
.Fo ASN1_STRING_set
.Fa "ASN1_STRING *str"
.Fa "const void *data"
.Fa "int len"
.Fc
.Ft int
.Fo ASN1_STRING_to_UTF8
.Fa "unsigned char **out"
.Fa "ASN1_STRING *in"
.Fc
.Ft int
.Fo ASN1_STRING_type
.Fa "ASN1_STRING *x"
.Fc
.Sh DESCRIPTION
These functions manipulate
.Vt ASN1_STRING
structures.
.Pp
.Fn ASN1_STRING_cmp
compares
.Fa a
and
.Fa b
and returns 0 if the two are identical.
The string types and the content are compared.
.Pp
.Fn ASN1_STRING_data
returns an internal pointer to the data of
.Fa x .
Since this is an internal pointer, it should
.Em not
be freed or modified in any way.
.Pp
.Fn ASN1_STRING_dup
returns a copy of the structure
.Fa a .
.Pp
.Fn ASN1_STRING_length
returns the length of the content of
.Fa x .
.Pp
.Fn ASN1_STRING_length_set
sets the length attribute of
.Fa x
to
.Fa len .
It may put
.Fa x
into an inconsistent internal state.
.Pp
.Fn ASN1_STRING_set
sets the data of the string
.Fa str
to the buffer
.Fa data
of length
.Fa len .
The supplied data is copied.
If
.Fa len
is -1 then the length is determined by
.Fn strlen data .
.Pp
.Fn ASN1_STRING_to_UTF8
converts the string
.Fa in
to UTF8 format.
The converted data is copied into a newly allocated buffer
.Fa out .
The length of
.Fa out
is returned or a negative error code.
The buffer
.Fa out
should be freed using
.Xr free 3 .
.Pp
.Fn ASN1_STRING_type
returns the type of
.Fa x ,
using standard constants such as
.Dv V_ASN1_OCTET_STRING .
.Sh NOTES
Almost all ASN1 types in OpenSSL are represented as
.Vt ASN1_STRING
structures.
Other types such as
.Vt ASN1_OCTET_STRING
are simply typedefed to
.Vt ASN1_STRING
and the functions call the
.Vt ASN1_STRING
equivalents.
.Vt ASN1_STRING
is also used for some
.Sy CHOICE
types which consist entirely of primitive string types such as
.Sy DirectoryString
and
.Sy Time .
.Pp
These functions should
.Em not
be used to examine or modify
.Vt ASN1_INTEGER
or
.Vt ASN1_ENUMERATED
types: the relevant
.Sy INTEGER
or
.Sy ENUMERATED
utility functions should be used instead.
.Pp
In general it cannot be assumed that the data returned by
.Fn ASN1_STRING_data
is NUL terminated, and it may contain embedded NUL characters.
The actual format of the data will depend on the actual string type itself:
for example for an IA5String the data will be ASCII,
for a BMPString two bytes per character in big endian format,
UTF8String will be in UTF8 format.
.Pp
Similar care should be take to ensure the data is in the correct format
when calling
.Fn ASN1_STRING_set .
.Sh SEE ALSO
.Xr ERR_get_error 3
