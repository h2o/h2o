listen:
  port: 4443
  ssl:
    certificate-file: examples/h2o/server.crt
    key-file: examples/h2o/server.keyer.key
hosts:
  "*":
    paths:
      /:
        file.dir: examples/doc_root
    #access-log: /dev/stdout
    kafka-log:
      metadata.broker.list: localhost
      group.id: h2o-kafka
      api.version.request: true
      topic:
        name: h2o-kafka
        message: '{"proto":"%H","method":"%m","query":"%q","status":"%s","tsusec": %{usec}t,"date":"%{%Y-%m-%d}t","path":"%U","server":"%V","remote": "%h", "localPort": %p "responseSize": "%b", "connectionId":%{connection-id}x,"sslVersion":"%{ssl.protocol-version}x","sslReused": "%{ssl.session-reused}x","sslCipher":"%{ssl.cipher}x","sslCipherBits":"%{ssl.cipher-bits}x", "http2StreamId": %{http2.stream-id}x, "connectTime": %{connect-time}x, "timeHeader": %{request-header-time}x, "timeBody": %{request-body-time}x, "timeProcess": %{process-time}x, "timeResponse": %{response-time}x, "timeDuration": %{duration}x, "headers":{ "userAgent":"%{User-agent}i", "Accept":"%{Accept}i", "xxxx":"%{Accept-Encoding}i", "Accept-Language":"%{Accept-Language}i", "Cache-Control":"%{Cache-Control}i", "Connection":"%{Connection}i", "Header":"%{Header}i", "Cookie":"%{Cookie}i", "Host":"%{Host}i", "Pragma":"%{Pragma}i","Referer":"%{Referer}i","Upgrade-Insecure-Requests":"%{Upgrade-Insecure-Requests}i"}}'



