.Dd $Mdocdate: July 17 2014 $
.Dt BIO_F_CIPHER 3
.Os
.Sh NAME
.Nm BIO_f_cipher ,
.Nm BIO_set_cipher ,
.Nm BIO_get_cipher_status ,
.Nm BIO_get_cipher_ctx
.Nd cipher BIO filter
.Sh SYNOPSIS
.In openssl/bio.h
.In openssl/evp.h
.Ft BIO_METHOD *
.Fo BIO_f_cipher
.Fa void
.Fc
.Ft void
.Fo BIO_set_cipher
.Fa "BIO *b"
.Fa "const EVP_CIPHER *cipher"
.Fa "unsigned char *key"
.Fa "unsigned char *iv"
.Fa "int enc"
.Fc
.Ft int
.Fo BIO_get_cipher_status
.Fa "BIO *b"
.Fc
.Ft int
.Fo BIO_get_cipher_ctx
.Fa "BIO *b"
.Fa "EVP_CIPHER_CTX **pctx"
.Fc
.Sh DESCRIPTION
.Fn BIO_f_cipher
returns the cipher BIO method.
This is a filter BIO that encrypts any data written through it,
and decrypts any data read from it.
It is a BIO wrapper for the cipher routines
.Xr EVP_CipherInit 3 ,
.Xr EVP_CipherUpdate 3 ,
and
.Xr EVP_CipherFinal 3 .
.Pp
Cipher BIOs do not support
.Xr BIO_gets 3
or
.Xr BIO_puts 3 .
.Pp
.Xr BIO_flush 3
on an encryption BIO that is being written through
is used to signal that no more data is to be encrypted:
this is used to flush and possibly pad the final block through the BIO.
.Pp
.Fn BIO_set_cipher
sets the cipher of BIO
.Fa b
to
.Fa cipher
using key
.Fa key
and IV
.Fa iv .
.Fa enc
should be set to 1 for encryption and zero for decryption.
.Pp
When reading from an encryption BIO, the final block is automatically
decrypted and checked when EOF is detected.
.Fn BIO_get_cipher_status
is a
.Xr BIO_ctrl 3
macro which can be called to determine
whether the decryption operation was successful.
.Pp
.Fn BIO_get_cipher_ctx
is a
.Xr BIO_ctrl 3
macro which retrieves the internal BIO cipher context.
The retrieved context can be used in conjunction
with the standard cipher routines to set it up.
This is useful when
.Fn BIO_set_cipher
is not flexible enough for the applications needs.
.Sh NOTES
When encrypting,
.Xr BIO_flush 3
must be called to flush the final block through the BIO.
If it is not, then the final block will fail a subsequent decrypt.
.Pp
When decrypting, an error on the final block is signalled
by a zero return value from the read operation.
A successful decrypt followed by EOF
will also return zero for the final read.
.Fn BIO_get_cipher_status
should be called to determine if the decrypt was successful.
.Pp
As always, if
.Xr BIO_gets 3
or
.Xr BIO_puts 3
support is needed, then it can be achieved
by preceding the cipher BIO with a buffering BIO.
.Sh RETURN VALUES
.Fn BIO_f_cipher
returns the cipher BIO method.
.Pp
.Fn BIO_set_cipher
does not return a value.
.Pp
.Fn BIO_get_cipher_status
returns 1 for a successful decrypt and 0 for failure.
.Pp
.Fn BIO_get_cipher_ctx
currently always returns 1.
